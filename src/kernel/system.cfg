MEMORY {
  ZP:       start =    $0, size =  $100, define = yes, type = rw;
  CPUSTACK: start =  $100, size =  $100, define = no;
  RAM:      start =  $200, size = $3E00, define = yes;
  VIA:      start = $6000, size = $2000, define = no;
  ROM_CSUM: start = $8000, size =    $4, define = yes;
  ROM:      start = $8004, size = $7FFC, define = yes, file   = %O;
}

SEGMENTS {
  ZEROPAGE: load = ZP,  type = zp,  define   = yes;
  DATA:     load = ROM, type = rw,  define   = yes, run = RAM;
  BSS:      load = RAM, type = bss, define   = yes;
  HEAP:     load = RAM, type = bss, optional = yes;
  STARTUP:  load = ROM, type = ro;
  ONCE:     load = ROM, type = ro,  optional = yes;
  CODE:     load = ROM, type = ro;
  RODATA:   load = ROM, type = ro;
  VECTORS:  load = ROM, type = ro,  start    = $FFFA;
}

FEATURES {
  CONDES: segment = STARTUP,
          type    = constructor,
          label   = __CONSTRUCTOR_TABLE__,
          count   = __CONSTRUCTOR_COUNT__;
  CONDES: segment = STARTUP,
          type    = destructor,
          label   = __DESTRUCTOR_TABLE__,
          count   = __DESTRUCTOR_COUNT__;
  CONDES: segment = RODATA,
          type    = interruptor,
          label   = __INTERRUPTOR_TABLE__,
          count   = __INTERRUPTOR_COUNT__,
          import  = __CALLIRQ__;
}

SYMBOLS {
  # Program stack size
  __STACKSIZE__: type = weak, value = $0200;
}
